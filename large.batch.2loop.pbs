#!/bin/bash --login
#PBS -N DoubleCell
# Select 5 nodes (each node has 24 cores. If we write select=2 here, we should write -n 48 in the aprun line below. maximum of 3072 cores)
#PBS -l select=320
#PBS -l walltime=24:00:00
#PBS -A e89-ic_m



# Move to directory that script was submitted from
export PBS_O_WORKDIR=$(readlink -f $PBS_O_WORKDIR)
cd $PBS_O_WORKDIR

list=$(echo disp-{001..040})
dirList="qha_4.575a qha_4.600a qha_4.625a qha_4.685a qha_4.730a"
#dirList="qha_4.759a qha_4.801a qha_4.850a qha_4.875a qha_4.900a"
#Job dir
dir=`pwd`

#Define a global counter
d=0
for j in $dirList; do
  cd $j

  for i in $list; do
  #Select volume 
    cd $i
  #Define an in-folder counter
    c=0
    echo $c $d
  #Advance counters
    let c=c+1
    let d=d+1
  #cp INCAR and KPOINTS
    cp /work/e89/e89/tamellan/E0_ACC/new_test_qha_fren_70/SUBSTUFF/* .
    cp ../../KPOINTS .
    cp ../../INCAR .
  #Call VASP
    aprun -n 96 /work/e89/e89/tamellan/vasp5_TI_lammps/vasp_5.3.5/vasp 2>&1 &

  #Debug messages  
    echo "pwd is: " `pwd` 
    echo "the date is: " `date`
    echo "counnter is: " $c
    echo "directory is: "  $i
    echo "command is: aprun -n 96 /work/e89/e89/tamellan/vasp5_TI_lammps/vasp_5.3.5/vasp &"

  #Short wait between node-job instances to get everything in order
    sleep 10

  #Allow 11 instances of code, each running 48 cores
    if (( $d % 80 == 0 )); then wait; fi      

    cd ../
    echo "Job Done: " $i 
    echo "Job Done: " `pwd` 
    echo "Job Done: " `date` 

  done
  cd ../

done
wait
echo "Total Job Done at " `date`
